WEEK 01:

- Team formation and brainstorming of initial project ideas,
including a file management system and personal financial assistant.

WEEK 02:

- We selected project 6 as our initial choice and then project 2 as
our secondary choice. We chose project 6 after completing a decision
matrix, where we collectively rated each project on various factors
such as its difficulty and our level of interest. Furthermore, Alvin's
experience with investing and my previous work experience at CommBank
provided a strong case for choosing project 6.

WEEK 03:

- In week 3, we met to clarify the fundamental user stories. I decided
to write these for the proposal, given that I had experience working at
CommBank in a Business Analyst role and had written stories for real
industry products.

WEEK 04:

- Submission of the proposal and clarification of the technology stack.
We decided to use a React front end and the AlphaVantage API. I researched
this API with Alvin and we both decided that it offered a usable feature
set with reasonable performance.

WEEK 05:

- Duirng week 5, I completed a React tutorial and assigned basic
responsibilities on the Trello board. Alvin will handle UI mostly, as he has
some familiarity with bootstrap. Matt and I will work on calling the API
to populate data on the webpage.

WEEK 06:

- After some technical difficulties, I succeeded in calling data from the
API and allowing the React components to update with live information. This
provides a stepping stone for many other features.

WEEK 07:

- This week I implemented a graphing feature from the PlotLy library to show
the historical high and low price for a particular stock over the previous
three years.

WEEK 08:

- Due to unavoidable deadlines this week, I was unable to contribute very much code
to the repository, However, as Scrum Master I updated the Trello board during
the week to reflect the team's new progress in adding a server and login feature.

WEEK 09:

- This week I developed a portfolio overview component. This component receives
data about a user's stock and then produces a plot of the historical value of
their total portoflio using PlotLy. Additionally, I purchased a premium API
key that provides us with significantly more allowable calls to our stock API.
Thi resolves a common problem of exceeding the limit of 5 calls per minute.


WEEK 10:

- During the final week of the project, I updated the master branch to include
portfolio performance history plot I had been developing with Plotly. The plot was
adjusted to show only one year of previous history for faster laoding. Additionally,
with Alvin's help we improved its efficiency by reducing the number of setState()
calls when updating the data.

-  I also planned and the introduction section of our presentation, which gave
a contextual overview of the project, the key features we had implemented and a
summary of the technology stack.